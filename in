use std::mem;
use proconio::input;

pub fn gcd(mut a: u128, mut b: u128) -> u128 {
    if a < b {
        mem::swap(&mut a, &mut b);
    }
    while b != 0 {
        let temp = a % b;
        a = b;
        b = temp;
    }
    a
}

pub fn lcm(a: u128, b: u128) -> u128 {
    a * b / gcd(a, b)
}

pub fn power(n: u128, mut x: u128) -> u128 {
    let mut a: u128 = 1;
    let mut b: u128 = n;
    let mut i: u128 = 0;
    while x != 0 {
        if 1u128 << i & x != 0 {
            a *= b;
            b *= b;
            x -= 1u128 << i;
        } else {
            b *= b;
        }
        i += 1;
    }
    a
}
pub fn powm(n: u128, mut x: u128, m: u128) -> u128 {
    let mut b: u128 = n;
    let mut a: u128 = 1;
    let mut i = 0;
    while x != 0 {
        if 1u128 << i & x != 0 {
            a = (a * b) % m;
            b = (b * b) % m;
            x ^= 1u128 << i;
        } else {
            b = (b * b) % m;
        }
        i += 1;
    }
    a
}
pub fn rt(n: u128) -> u128 {
    let mut l: u128 = 1;
    let mut r: u128 = n as u128;
    while r - l > 1 {
        let m = (r + l) / 2;
        if m * m == n as u128 {
            return m as u128;
        }
        if m * m > n as u128 {
            r = m;
        } else {
            l = m;
        }
    }
    return l as u128;
}
